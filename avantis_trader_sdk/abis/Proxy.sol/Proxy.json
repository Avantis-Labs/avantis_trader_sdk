{"abi":[{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.7+commit.e28d00a7"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":"Proxy"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":{"keccak256":"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27","urls":["bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472","dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol","id":50307,"exportedSymbols":{"Proxy":[50306]},"nodeType":"SourceUnit","src":"99:3148:59","nodes":[{"id":50256,"nodeType":"PragmaDirective","src":"99:23:59","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":50306,"nodeType":"ContractDefinition","src":"723:2523:59","nodes":[{"id":50265,"nodeType":"FunctionDefinition","src":"948:895:59","nodes":[],"body":{"id":50264,"nodeType":"Block","src":"1008:835:59","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1027:810:59","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:59","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:59","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:59"},"nodeType":"YulFunctionCall","src":"1286:14:59"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:59"},"nodeType":"YulFunctionCall","src":"1267:34:59"},"nodeType":"YulExpressionStatement","src":"1267:34:59"},{"nodeType":"YulVariableDeclaration","src":"1428:74:59","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1455:3:59"},"nodeType":"YulFunctionCall","src":"1455:5:59"},{"name":"implementation","nodeType":"YulIdentifier","src":"1462:14:59"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:59","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1481:12:59"},"nodeType":"YulFunctionCall","src":"1481:14:59"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:59","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:59","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1442:12:59"},"nodeType":"YulFunctionCall","src":"1442:60:59"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1432:6:59","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:59","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1573:1:59","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1576:14:59"},"nodeType":"YulFunctionCall","src":"1576:16:59"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1555:14:59"},"nodeType":"YulFunctionCall","src":"1555:38:59"},"nodeType":"YulExpressionStatement","src":"1555:38:59"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1688:59:59","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:59","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1716:14:59"},"nodeType":"YulFunctionCall","src":"1716:16:59"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:59"},"nodeType":"YulFunctionCall","src":"1706:27:59"},"nodeType":"YulExpressionStatement","src":"1706:27:59"}]},"nodeType":"YulCase","src":"1681:66:59","value":{"kind":"number","nodeType":"YulLiteral","src":"1686:1:59","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1768:59:59","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:59","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1796:14:59"},"nodeType":"YulFunctionCall","src":"1796:16:59"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1786:6:59"},"nodeType":"YulFunctionCall","src":"1786:27:59"},"nodeType":"YulExpressionStatement","src":"1786:27:59"}]},"nodeType":"YulCase","src":"1760:67:59","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1614:6:59"},"nodeType":"YulSwitch","src":"1607:220:59"}]},"evmVersion":"london","externalReferences":[{"declaration":50260,"isOffset":false,"isSlot":false,"src":"1462:14:59","valueSize":1}],"id":50263,"nodeType":"InlineAssembly","src":"1018:819:59"}]},"documentation":{"id":50258,"nodeType":"StructuredDocumentation","src":"753:190:59","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:59","parameters":{"id":50261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50260,"mutability":"mutable","name":"implementation","nameLocation":"975:14:59","nodeType":"VariableDeclaration","scope":50265,"src":"967:22:59","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50259,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:59","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:59"},"returnParameters":{"id":50262,"nodeType":"ParameterList","parameters":[],"src":"1008:0:59"},"scope":50306,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":50271,"nodeType":"FunctionDefinition","src":"2027:67:59","nodes":[],"documentation":{"id":50266,"nodeType":"StructuredDocumentation","src":"1849:173:59","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:59","parameters":{"id":50267,"nodeType":"ParameterList","parameters":[],"src":"2051:2:59"},"returnParameters":{"id":50270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":50271,"src":"2085:7:59","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50268,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:59","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:59"},"scope":50306,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":50284,"nodeType":"FunctionDefinition","src":"2322:110:59","nodes":[],"body":{"id":50283,"nodeType":"Block","src":"2360:72:59","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":50275,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50305,"src":"2370:15:59","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":50276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2370:17:59","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50277,"nodeType":"ExpressionStatement","src":"2370:17:59"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":50279,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50271,"src":"2407:15:59","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":50280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2407:17:59","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":50278,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50265,"src":"2397:9:59","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":50281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2397:28:59","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50282,"nodeType":"ExpressionStatement","src":"2397:28:59"}]},"documentation":{"id":50272,"nodeType":"StructuredDocumentation","src":"2100:217:59","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:59","parameters":{"id":50273,"nodeType":"ParameterList","parameters":[],"src":"2340:2:59"},"returnParameters":{"id":50274,"nodeType":"ParameterList","parameters":[],"src":"2360:0:59"},"scope":50306,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":50292,"nodeType":"FunctionDefinition","src":"2629:64:59","nodes":[],"body":{"id":50291,"nodeType":"Block","src":"2665:28:59","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":50288,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50284,"src":"2675:9:59","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":50289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2675:11:59","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50290,"nodeType":"ExpressionStatement","src":"2675:11:59"}]},"documentation":{"id":50285,"nodeType":"StructuredDocumentation","src":"2438:186:59","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":50286,"nodeType":"ParameterList","parameters":[],"src":"2637:2:59"},"returnParameters":{"id":50287,"nodeType":"ParameterList","parameters":[],"src":"2665:0:59"},"scope":50306,"stateMutability":"payable","virtual":true,"visibility":"external"},{"id":50300,"nodeType":"FunctionDefinition","src":"2853:63:59","nodes":[],"body":{"id":50299,"nodeType":"Block","src":"2888:28:59","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":50296,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50284,"src":"2898:9:59","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":50297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:11:59","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":50298,"nodeType":"ExpressionStatement","src":"2898:11:59"}]},"documentation":{"id":50293,"nodeType":"StructuredDocumentation","src":"2699:149:59","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":50294,"nodeType":"ParameterList","parameters":[],"src":"2860:2:59"},"returnParameters":{"id":50295,"nodeType":"ParameterList","parameters":[],"src":"2888:0:59"},"scope":50306,"stateMutability":"payable","virtual":true,"visibility":"external"},{"id":50305,"nodeType":"FunctionDefinition","src":"3198:46:59","nodes":[],"body":{"id":50304,"nodeType":"Block","src":"3242:2:59","nodes":[],"statements":[]},"documentation":{"id":50301,"nodeType":"StructuredDocumentation","src":"2922:271:59","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:59","parameters":{"id":50302,"nodeType":"ParameterList","parameters":[],"src":"3222:2:59"},"returnParameters":{"id":50303,"nodeType":"ParameterList","parameters":[],"src":"3242:0:59"},"scope":50306,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":50257,"nodeType":"StructuredDocumentation","src":"124:598:59","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[50306],"name":"Proxy","nameLocation":"741:5:59","scope":50307,"usedErrors":[]}],"license":"MIT"},"id":59}