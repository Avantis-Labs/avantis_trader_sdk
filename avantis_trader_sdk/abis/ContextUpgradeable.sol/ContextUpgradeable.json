{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.7+commit.e28d00a7"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":"ContextUpgradeable"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol","id":47011,"exportedSymbols":{"AddressUpgradeable":[46968],"ContextUpgradeable":[47010],"Initializable":[43537]},"nodeType":"SourceUnit","src":"86:1259:38","nodes":[{"id":46970,"nodeType":"PragmaDirective","src":"86:23:38","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":46971,"nodeType":"ImportDirective","src":"110:42:38","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":47011,"sourceUnit":43538,"symbolAliases":[],"unitAlias":""},{"id":47010,"nodeType":"ContractDefinition","src":"651:693:38","nodes":[{"id":46980,"nodeType":"FunctionDefinition","src":"711:59:38","nodes":[],"body":{"id":46979,"nodeType":"Block","src":"763:7:38","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":46977,"kind":"modifierInvocation","modifierName":{"id":46976,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":43482,"src":"746:16:38"},"nodeType":"ModifierInvocation","src":"746:16:38"}],"name":"__Context_init","nameLocation":"720:14:38","parameters":{"id":46975,"nodeType":"ParameterList","parameters":[],"src":"734:2:38"},"returnParameters":{"id":46978,"nodeType":"ParameterList","parameters":[],"src":"763:0:38"},"scope":47010,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":46986,"nodeType":"FunctionDefinition","src":"776:69:38","nodes":[],"body":{"id":46985,"nodeType":"Block","src":"838:7:38","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":46983,"kind":"modifierInvocation","modifierName":{"id":46982,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":43482,"src":"821:16:38"},"nodeType":"ModifierInvocation","src":"821:16:38"}],"name":"__Context_init_unchained","nameLocation":"785:24:38","parameters":{"id":46981,"nodeType":"ParameterList","parameters":[],"src":"809:2:38"},"returnParameters":{"id":46984,"nodeType":"ParameterList","parameters":[],"src":"838:0:38"},"scope":47010,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":46995,"nodeType":"FunctionDefinition","src":"850:96:38","nodes":[],"body":{"id":46994,"nodeType":"Block","src":"912:34:38","nodes":[],"statements":[{"expression":{"expression":{"id":46991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":46992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"929:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":46990,"id":46993,"nodeType":"Return","src":"922:17:38"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:38","parameters":{"id":46987,"nodeType":"ParameterList","parameters":[],"src":"869:2:38"},"returnParameters":{"id":46990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46995,"src":"903:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46988,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:38"},"scope":47010,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":47004,"nodeType":"FunctionDefinition","src":"952:99:38","nodes":[],"body":{"id":47003,"nodeType":"Block","src":"1019:32:38","nodes":[],"statements":[{"expression":{"expression":{"id":47000,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":47001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"1036:8:38","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":46999,"id":47002,"nodeType":"Return","src":"1029:15:38"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:38","parameters":{"id":46996,"nodeType":"ParameterList","parameters":[],"src":"969:2:38"},"returnParameters":{"id":46999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47004,"src":"1003:14:38","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":46997,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:38"},"scope":47010,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":47009,"nodeType":"VariableDeclaration","src":"1316:25:38","nodes":[],"constant":false,"documentation":{"id":47005,"nodeType":"StructuredDocumentation","src":"1057:254:38","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1336:5:38","scope":47010,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":47006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:38","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47008,"length":{"hexValue":"3530","id":47007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:38","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:38","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":46973,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":43537,"src":"691:13:38"},"id":46974,"nodeType":"InheritanceSpecifier","src":"691:13:38"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":46972,"nodeType":"StructuredDocumentation","src":"154:496:38","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[47010,43537],"name":"ContextUpgradeable","nameLocation":"669:18:38","scope":47011,"usedErrors":[]}],"license":"MIT"},"id":38}