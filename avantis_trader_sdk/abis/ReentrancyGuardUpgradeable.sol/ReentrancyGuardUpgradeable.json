{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.7+commit.e28d00a7"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0","urls":["bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025","dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol","id":43749,"exportedSymbols":{"AddressUpgradeable":[46968],"Initializable":[43537],"ReentrancyGuardUpgradeable":[43748]},"nodeType":"SourceUnit","src":"112:3550:26","nodes":[{"id":43666,"nodeType":"PragmaDirective","src":"112:23:26","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":43667,"nodeType":"ImportDirective","src":"136:42:26","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":43749,"sourceUnit":43538,"symbolAliases":[],"unitAlias":""},{"id":43748,"nodeType":"ContractDefinition","src":"931:2730:26","nodes":[{"id":43673,"nodeType":"VariableDeclaration","src":"1747:41:26","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:26","scope":43748,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":43672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":43676,"nodeType":"VariableDeclaration","src":"1794:37:26","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:26","scope":43748,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":43675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":43678,"nodeType":"VariableDeclaration","src":"1838:23:26","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1854:7:26","scope":43748,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":43687,"nodeType":"FunctionDefinition","src":"1868:111:26","nodes":[],"body":{"id":43686,"nodeType":"Block","src":"1928:51:26","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43683,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43697,"src":"1938:32:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":43684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1938:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43685,"nodeType":"ExpressionStatement","src":"1938:34:26"}]},"implemented":true,"kind":"function","modifiers":[{"id":43681,"kind":"modifierInvocation","modifierName":{"id":43680,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":43482,"src":"1911:16:26"},"nodeType":"ModifierInvocation","src":"1911:16:26"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:26","parameters":{"id":43679,"nodeType":"ParameterList","parameters":[],"src":"1899:2:26"},"returnParameters":{"id":43682,"nodeType":"ParameterList","parameters":[],"src":"1928:0:26"},"scope":43748,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":43697,"nodeType":"FunctionDefinition","src":"1985:109:26","nodes":[],"body":{"id":43696,"nodeType":"Block","src":"2055:39:26","nodes":[],"statements":[{"expression":{"id":43694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43692,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43678,"src":"2065:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":43693,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43673,"src":"2075:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43695,"nodeType":"ExpressionStatement","src":"2065:22:26"}]},"implemented":true,"kind":"function","modifiers":[{"id":43690,"kind":"modifierInvocation","modifierName":{"id":43689,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":43482,"src":"2038:16:26"},"nodeType":"ModifierInvocation","src":"2038:16:26"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:26","parameters":{"id":43688,"nodeType":"ParameterList","parameters":[],"src":"2026:2:26"},"returnParameters":{"id":43691,"nodeType":"ParameterList","parameters":[],"src":"2055:0:26"},"scope":43748,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":43708,"nodeType":"ModifierDefinition","src":"2471:103:26","nodes":[],"body":{"id":43707,"nodeType":"Block","src":"2495:79:26","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43700,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43723,"src":"2505:19:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":43701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43702,"nodeType":"ExpressionStatement","src":"2505:21:26"},{"id":43703,"nodeType":"PlaceholderStatement","src":"2536:1:26"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43704,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43731,"src":"2547:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":43705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2547:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43706,"nodeType":"ExpressionStatement","src":"2547:20:26"}]},"documentation":{"id":43698,"nodeType":"StructuredDocumentation","src":"2100:366:26","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2480:12:26","parameters":{"id":43699,"nodeType":"ParameterList","parameters":[],"src":"2492:2:26"},"virtual":false,"visibility":"internal"},{"id":43723,"nodeType":"FunctionDefinition","src":"2580:287:26","nodes":[],"body":{"id":43722,"nodeType":"Block","src":"2619:248:26","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43712,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43678,"src":"2712:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":43713,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43676,"src":"2723:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":43715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":43711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2704:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":43716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2704:63:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43717,"nodeType":"ExpressionStatement","src":"2704:63:26"},{"expression":{"id":43720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43718,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43678,"src":"2842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":43719,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43676,"src":"2852:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43721,"nodeType":"ExpressionStatement","src":"2842:18:26"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:26","parameters":{"id":43709,"nodeType":"ParameterList","parameters":[],"src":"2608:2:26"},"returnParameters":{"id":43710,"nodeType":"ParameterList","parameters":[],"src":"2619:0:26"},"scope":43748,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":43731,"nodeType":"FunctionDefinition","src":"2873:209:26","nodes":[],"body":{"id":43730,"nodeType":"Block","src":"2911:171:26","nodes":[],"statements":[{"expression":{"id":43728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43726,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43678,"src":"3053:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":43727,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43673,"src":"3063:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43729,"nodeType":"ExpressionStatement","src":"3053:22:26"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:26","parameters":{"id":43724,"nodeType":"ParameterList","parameters":[],"src":"2900:2:26"},"returnParameters":{"id":43725,"nodeType":"ParameterList","parameters":[],"src":"2911:0:26"},"scope":43748,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":43742,"nodeType":"FunctionDefinition","src":"3261:107:26","nodes":[],"body":{"id":43741,"nodeType":"Block","src":"3325:43:26","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43737,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43678,"src":"3342:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":43738,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43676,"src":"3353:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":43736,"id":43740,"nodeType":"Return","src":"3335:26:26"}]},"documentation":{"id":43732,"nodeType":"StructuredDocumentation","src":"3088:168:26","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3270:23:26","parameters":{"id":43733,"nodeType":"ParameterList","parameters":[],"src":"3293:2:26"},"returnParameters":{"id":43736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43742,"src":"3319:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43734,"name":"bool","nodeType":"ElementaryTypeName","src":"3319:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3318:6:26"},"scope":43748,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":43747,"nodeType":"VariableDeclaration","src":"3633:25:26","nodes":[],"constant":false,"documentation":{"id":43743,"nodeType":"StructuredDocumentation","src":"3374:254:26","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"3653:5:26","scope":43748,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":43744,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43746,"length":{"hexValue":"3439","id":43745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3641:2:26","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3633:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":43669,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":43537,"src":"979:13:26"},"id":43670,"nodeType":"InheritanceSpecifier","src":"979:13:26"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":43668,"nodeType":"StructuredDocumentation","src":"180:750:26","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[43748,43537],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:26","scope":43749,"usedErrors":[]}],"license":"MIT"},"id":26}