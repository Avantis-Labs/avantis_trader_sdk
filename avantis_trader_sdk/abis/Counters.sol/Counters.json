{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c8d23ddecbebdc07201f1978ba8bc10ae34533286a2682fa0266579ea50a9b264736f6c63430008070033","sourceMap":"424:971:72:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:72;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c8d23ddecbebdc07201f1978ba8bc10ae34533286a2682fa0266579ea50a9b264736f6c63430008070033","sourceMap":"424:971:72:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.7+commit.e28d00a7"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=lib/chainlink/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink/=lib/chainlink/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","pyth-sdk-solidity/=lib/pyth-sdk-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":"Counters"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Counters.sol","id":52363,"exportedSymbols":{"Counters":[52362]},"nodeType":"SourceUnit","src":"87:1309:72","nodes":[{"id":52290,"nodeType":"PragmaDirective","src":"87:23:72","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":52362,"nodeType":"ContractDefinition","src":"424:971:72","nodes":[{"id":52294,"nodeType":"StructDefinition","src":"447:374:72","nodes":[],"canonicalName":"Counters.Counter","members":[{"constant":false,"id":52293,"mutability":"mutable","name":"_value","nameLocation":"794:6:72","nodeType":"VariableDeclaration","scope":52294,"src":"786:14:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52292,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:72","scope":52362,"visibility":"public"},{"id":52306,"nodeType":"FunctionDefinition","src":"827:112:72","nodes":[],"body":{"id":52305,"nodeType":"Block","src":"901:38:72","nodes":[],"statements":[{"expression":{"expression":{"id":52302,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52297,"src":"918:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":52303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":52293,"src":"918:14:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":52301,"id":52304,"nodeType":"Return","src":"911:21:72"}]},"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:72","parameters":{"id":52298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52297,"mutability":"mutable","name":"counter","nameLocation":"860:7:72","nodeType":"VariableDeclaration","scope":52306,"src":"844:23:72","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":52296,"nodeType":"UserDefinedTypeName","pathNode":{"id":52295,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":52294,"src":"844:7:72"},"referencedDeclaration":52294,"src":"844:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:72"},"returnParameters":{"id":52301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52306,"src":"892:7:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52299,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:72"},"scope":52362,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":52320,"nodeType":"FunctionDefinition","src":"945:123:72","nodes":[],"body":{"id":52319,"nodeType":"Block","src":"998:70:72","nodes":[],"statements":[{"id":52318,"nodeType":"UncheckedBlock","src":"1008:54:72","statements":[{"expression":{"id":52316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":52312,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52309,"src":"1032:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":52314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":52293,"src":"1032:14:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":52315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:72","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":52317,"nodeType":"ExpressionStatement","src":"1032:19:72"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:72","parameters":{"id":52310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52309,"mutability":"mutable","name":"counter","nameLocation":"980:7:72","nodeType":"VariableDeclaration","scope":52320,"src":"964:23:72","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":52308,"nodeType":"UserDefinedTypeName","pathNode":{"id":52307,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":52294,"src":"964:7:72"},"referencedDeclaration":52294,"src":"964:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:72"},"returnParameters":{"id":52311,"nodeType":"ParameterList","parameters":[],"src":"998:0:72"},"scope":52362,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":52348,"nodeType":"FunctionDefinition","src":"1074:229:72","nodes":[],"body":{"id":52347,"nodeType":"Block","src":"1127:176:72","nodes":[],"statements":[{"assignments":[52327],"declarations":[{"constant":false,"id":52327,"mutability":"mutable","name":"value","nameLocation":"1145:5:72","nodeType":"VariableDeclaration","scope":52347,"src":"1137:13:72","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":52330,"initialValue":{"expression":{"id":52328,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52323,"src":"1153:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":52329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":52293,"src":"1153:14:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:72"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":52332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52327,"src":"1185:5:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":52333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:72","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":52335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:72","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":52331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:72","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":52336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52337,"nodeType":"ExpressionStatement","src":"1177:49:72"},{"id":52346,"nodeType":"UncheckedBlock","src":"1236:61:72","statements":[{"expression":{"id":52344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":52338,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52323,"src":"1260:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":52340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":52293,"src":"1260:14:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":52341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52327,"src":"1277:5:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":52342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:72","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":52345,"nodeType":"ExpressionStatement","src":"1260:26:72"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:72","parameters":{"id":52324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52323,"mutability":"mutable","name":"counter","nameLocation":"1109:7:72","nodeType":"VariableDeclaration","scope":52348,"src":"1093:23:72","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":52322,"nodeType":"UserDefinedTypeName","pathNode":{"id":52321,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":52294,"src":"1093:7:72"},"referencedDeclaration":52294,"src":"1093:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:72"},"returnParameters":{"id":52325,"nodeType":"ParameterList","parameters":[],"src":"1127:0:72"},"scope":52362,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":52361,"nodeType":"FunctionDefinition","src":"1309:84:72","nodes":[],"body":{"id":52360,"nodeType":"Block","src":"1358:35:72","nodes":[],"statements":[{"expression":{"id":52358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":52354,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52351,"src":"1368:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":52356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":52293,"src":"1368:14:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":52357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:72","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":52359,"nodeType":"ExpressionStatement","src":"1368:18:72"}]},"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:72","parameters":{"id":52352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52351,"mutability":"mutable","name":"counter","nameLocation":"1340:7:72","nodeType":"VariableDeclaration","scope":52361,"src":"1324:23:72","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":52350,"nodeType":"UserDefinedTypeName","pathNode":{"id":52349,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":52294,"src":"1324:7:72"},"referencedDeclaration":52294,"src":"1324:7:72","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$52294_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:72"},"returnParameters":{"id":52353,"nodeType":"ParameterList","parameters":[],"src":"1358:0:72"},"scope":52362,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":52291,"nodeType":"StructuredDocumentation","src":"112:311:72","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"linearizedBaseContracts":[52362],"name":"Counters","nameLocation":"432:8:72","scope":52363,"usedErrors":[]}],"license":"MIT"},"id":72}